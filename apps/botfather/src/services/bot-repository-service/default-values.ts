import {
  EScenarioElementType,
  ETaskType,
  TScenarioElement,
  TTaskOrder,
} from "@core/types/client";
import { BotEntity } from "@core/types/server";

export const defaultTaskOrder: TTaskOrder = [
  ETaskType.RESPOND_TO_DM_MESSAGE,
  ETaskType.SPAM_TO_GROUP,
  ETaskType.GROUP_JOIN,
  ETaskType.GROUP_LEAVE,
  ETaskType.RESPOND_TO_GROUP_MESSAGE,
];


export const defaultScenario: TScenarioElement[] = [
  {
    type: EScenarioElementType.VOICE,
    fileName: "step1.ogg",
  },
  {
    type: EScenarioElementType.VOICE,
    fileName: "step2.ogg",
  },
  {
    type: EScenarioElementType.VOICE,
    fileName: "step3.ogg",
  },
  {
    type: EScenarioElementType.VOICE,
    fileName: "step4.ogg",
  },
  {
    type: EScenarioElementType.TEXT,
    text: "—Å–º–æ—Ç—Ä–∏, –º–æ–π –Ω–∏–∫ —Ç–∞–º ##botName##\r\nhttps://meetka1.name/?r=1515&sk=586\r\n–º–æ–∂–µ—à—å –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –≤—Å–µ –ø–æ–ª—è, —ç—Ç–æ –Ω–µ –≤–∞–∂–Ω–æ)",
  },
  {
    type: EScenarioElementType.TEXT,
    text: "–ø—Ä–æ—Å—Ç–∏, –Ω–µ –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å, —è —É–∂–µ –≤ —ç—Ñ–∏—Ä–µ",
  },
  {
    type: EScenarioElementType.TEXT,
    text: "–µ—Å–ª–∏ –Ω–µ —Å–ª–æ–∂–Ω–æ –¥–æ–±–∞–≤—å –º–µ–Ω—è –≤ –∫–∞–∫–æ–π-—Ç–æ —á–∞—Ç–∏–∫ –¥–ª—è –æ–±—â–µ–Ω–∏—è –∞ —Ç–æ —Ç—É—Ç —Å—Ç–∞–ª–æ —Å–∫—É—á–Ω–æüòò",
  },
];

export const defaultValues: Omit<BotEntity, "api_id" | "api_hash"> = {
  sessionString: "",
  clientState: "",
  clientStateUpdateTime: new Date(Date.now()),
  behaviorModel: "base",
  answersDb: "base",
  readDelay: 1000,
  dmScenarioNames: ["initial"],
  typeDelayMultiplier: 1,
  taskOrder: defaultTaskOrder.join(","),
  afterTaskDelay: 1000,
  afterTaskIdleTime: 1000,
  voice: "ksenia",
  replacements: "{}",
  copyFrom: -1,
  spamDBname: "base",
  botName: "baseName",
};
